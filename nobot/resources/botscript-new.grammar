<script> --> <p-options-list> <bot-options-list> <declaration-list> <graph-script>

<p-options-list> --> <set-p-option> <p-options-list> |
                      <empty>

<bot-options-list> --> <set-bot-option> <bot-options-list> |
                        <empty>

<declaration-list> --> <declaration> <declaration-list> |
                        <empty>

<graph-script> --> <stmt-list>

<stmt-list> --> <stmt> <stmt-list> |
                <empty>

<declaration> --> <data-declaration> |
                  <expr-declaration> |
                  <const-declaration>

<stmt> --> <out-data-rule> |
           <in-data-rule> |
           <title-declaration>

<set-bot-option> --> '@def' <id> <args-list>

<data-declaration> --> 'data' <id> '=' <expr>

<expr-declaration> --> 'expr' <id> '=' <expr>

<const-declaration> --> 'const' <id> '=' <expr> # its need ?

<out-data-rule> --> '[' <out-rule-label> '] '<=' <do-expr>

<in-data-rule> --> '[' <in-rule-label> ']' '=>' <bool-expr> '=>' <do-expr>

<out-rule-label> --> 'first' |
                    'any' |
                    <label>

<in-rule-label> --> <label>


<args-list> --> <arg> <args-list> |
                <empty>

<arg> --> <id> |
          <num-string>

########################### FOR LEXER ###########################

<id> --> <letter> <char-string>

<char-string> --> <letter> <char-string> |
                  <number> <char-string> |
                  '-' <char-string> |
                  <emtpy>

<num-string> --> <number> <num-string>
                 <empty>

<letter> --> [a-z | A-Z]

<number> --> [0-9]
